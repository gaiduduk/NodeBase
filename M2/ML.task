
[code]

function PI(a: Double): Double;
var dx, i : Double;
begin
  Result := 0;
  I := 1;
  dx := 1;
  while a > I do
    begin
      Result := Result + dx;
      I := I + 1;
      dx := 1 / Sqr(I);
    end;
  Result := Sqrt(Result * 6);
end;



[meta] 

/types.meta

/math.dll

/math.dll.meta

func?a:float#res 'comment'
res=0,0
i=1,0
dx=1,0
while
fje?i&a#exit|
i=finc?i
res=fadd?res&dx
dx=fdiv?1,0&fsqr?i
jmp#lab|
while^lab
here^exit
res=fsqrt?fmul?res&6,0

func?750,0


[problebs]
abc-z 987-0 -> abc-z 012-9


[statistics]
2107 max optimization
289 gloval variable and stdcall 


[optimization] 
stdcall -> fastcall x3
delete ParentLocal and LocalName and Path
String to PString in func params 

hash big data
here_is_words_spase_to_thisssss
1bc29b36f623ba82aaf6724fd3b16718

export base to one file
remove the extra packages
not generate ddp file

when comparate value and $00000000
convert string to longbool(4b)


[mbase]
calculation in GPU

INode.Options
authentication

get drunk and create documentation -> mclient 
Value: PNode; -> Value: ANode;
save to hard drive and free mem 
free unused modules
x64 1,0 = 1
a=b=c=0
str=!(*{!}%00)
pchar=!(string)
add?1&2,0
name.func?a&b
inc?*i
name.ptr.ptr
*1.=1
//172.164.55.28/index.php
S='hello world!'
'comments in code'




[mparser][mtranslator]->[minterpreter]
parsing pas file(import)
create TMLink

<meta charset="utf-8" parser="(*);">
change literals
code with ' '
hello+meta_word 
S=\\'hello world!'
'comments in code'
parser changes
1&1,1 -> 1,0&1,1

mbuilder %00;. first mask *%00

parser generator

detector rec
if this = func then 
this.pred <> module


[soft]
combined into modules (node into tree)

pak 
svn FSFS




dll function parameters
calling convention
count params
type params


Node.Handle = Pointer to
Handle Module
Pointer Function 
Integer Calling 






